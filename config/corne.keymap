/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 *
 * Credits to https://github.com/bzgec/zmk-config
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include "keys_se.h"

#define xxx &none
#define ___ &trans

#define MAIN        0  // Main layer with SE layout
#define LOWER       1  // Symbols layer, host layout: SE
#define RSE         2  // Base layer, host layout: SE
#define L_ZMK       4  // ZMK layer



// https://zmk.dev/docs/features/debouncing
&kscan0 {
    debounce-press-ms = <1>;    // Default is 5 ms
    debounce-release-ms = <4>;  // Default is 5 ms
};

&lt {
	flavor = "tap-preferred";
	tapping-term-ms = <200>;
	};
&mt { 
	flavor = "tap-preferred";
	tapping-term-ms = <200>;
	};

/ {

    behaviors {
        #include "behaviors_mod_morph.dtsi"
    };

    keymap {
        compatible = "zmk,keymap"; 

        &kp SE_ODIA &mt RCTRL SE_ADIA

        main_layer_se {
// -----------------------------------------------------------------------------------------
// | GUI     |  Q  |  W  |  E      |  R       |  T  |    |  Y  |  U   |  I   |  O  |  P  |  Å     |
// | CTRL/$  |  A  |  S  |  D      |  F       |  G  |    |  H  |  J   |  K   |  L  |  Ö  | CTRL/Ä |
// | ALT/@   |  Z  |  X  |  C      |  D       |  V  |    |  K  |  H   | , ;  | . : | - _ | RALT/' |
//                 | RES/ESC | SHFT/TAB | LOWER/SPC |    | LOWER/ENT  | SHFT/BACK  | RES/DEL |
            bindings = <
   &kp LGUI         &kp SE_Q  &kp SE_W  &kp SE_E     &kp SE_R      &kp SE_T      &kp SE_Y       &kp SE_U             &kp SE_I    &kp SE_O   &kp SE_P  &kp SE_ARNG
   &mt LCTRL SE_DLR &kp SE_A  &kp SE_S  &kp SE_D     &kp SE_F      &kp SE_G      &kp SE_H       &kp SE_J             &kp SE_K    &kp SE_L   &kp SE_ODIA     &kp SE_ADIA
   &mt LALT  SE_AT  &kp SE_Z  &kp SE_X  &kp SE_C     &kp SE_V      &kp SE_B      &kp SE_N       &kp SE_M             &comm_labk  &dot_rabk  &kp SE_MINS  &mt RALT SE_QUOT
                                 &lt RSE ESC  &mt LSHFT TAB &lt LOWER SPACE      &lt LOWER RET  &mt RSHFT BACKSPACE  &lt RSE DEL
            >;
        };


        lower_layer {
// -----------------------------------------------------------------------------------------
// | GUI    |  F1  |  F2  |  F3  |  F4   |  F5  |    |  F6  |  F7   |  F8  |  F9  |  F10 |  F11   |
// | CTRL/{ |   [  |   ]  |   }  |   |   |   \  |    |   /  |   ?   |   *  |   (  |   )  |   +    |
// | ALT/´  |   1  |   2  |   3  |   4   |   5  |    |   6  |   7   |   8  |   9  |   0  | RALT/` |
//             | ZMK/ESC | SHFT/TAB | LOWER/SPC |    | LOWER/ENT  | SHFT/BACK  | ZMK/DEL |
            bindings = <
    &kp LGUI          &kp F1      &kp F2       &kp F3         &kp F4       &kp F5            &kp F6         &kp F7         &kp F8       &kp F9      &kp F10      &kp F11
    &mt LCTRL SE_LCBR &kp SE_LBRC &kp SE_RBRC  &kp SE_RCBR    &kp SE_PIPE  &kp SE_BSLS       &kp SE_SLSH    &kp SE_QUES    &kp SE_ASTR  &kp SE_LPRN &kp SE_RPRN  &mt RCTRL SE_PLUS
    &mt LALT SE_ACUT  &kp SE_N1   &kp SE_N2    &kp SE_N3      &kp SE_N4    &kp SE_N5         &kp SE_N6      &kp SE_N7      &kp SE_N8    &kp SE_N9   &kp SE_N0    &mt RALT SE_GRV
                                        &lt L_ZMK ESC  &mt LSHFT TAB &lt LOWER SPACE         &lt LOWER RET  &mt RSHFT BACKSPACE  &lt L_ZMK DEL
            >;
        };


        raise_layer {
// -----------------------------------------------------------------------------------------
// | GUI    |   /  |   7  |   8  |   9   |  -  |    | VOLU | HOME |  UP   | PGUP | CUT   | S-CPY  |
// | CTRL/= |   *  |   4  |   5  |   6   |  +  |    | MUT  | LEFT | DOWN  | RGHT | PASTE | CTRL/" |
// | ALT/.  |   0  |   1  |   2  |   3   |  ,  |    | VOLD | END  | PRINT | PGDN | COPY  | ALT/`  |
//            | ZMK/ESC | SHFT/TAB | LOWER/SPC |    | LOWER/ENT  | SHFT/BACK  | ZMK/DEL |
            bindings = <
    &kp LGUI          &kp SE_SLSH   &kp SE_N7 &kp SE_N8  &kp SE_N9     &kp SE_MINS          &kp C_PLAY_PAUSE  &kp HOME   &kp UP     &kp PG_UP  &kp RG(SE_X)  &kp RA(RS(RG(SE_V)))
    &mt LCTRL SE_LCBR &kp SE_ASTR   &kp SE_N4 &kp SE_N5  &kp SE_N6     &kp SE_PLUS          &kp C_NEXT        &kp LEFT   &kp DOWN   &kp RIGHT  &kp RG(SE_V)  &mt RCTRL SE_PLUS
    &mt LALT SE_ACUT  &kp SE_N0     &kp SE_N1 &kp SE_N2  &kp SE_N3     &kp SE_COMM          &kp C_PREVIOUS    &kp END    &kp PSCRN  &kp PG_DN  &kp RG(SE_C)  &mt RALT SE_GRV
                                         &lt L_ZMK ESC   &mt LSHFT TAB &lt LOWER SPACE      &lt LOWER RET     &mt RSHFT BACKSPACE   &lt L_ZMK DEL
            >;
        };



        zmk_layer {
// -----------------------------------------------------------------------------------------
// | XXX  | BT 0  | BT 1   | BT 2   | BT 3   | BT 4   |        |       |           |           |      |      |      |
// |      | BTCLR |        | EP ON  | EP OFF |        |        |       |           |           |      |      |      |
// |      |       |        |        |        |        |        | Reset | Bootl     |           |      |      |      |
//                         |        |        |        |        |       |           |           |
            bindings = <
   xxx &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2     &bt BT_SEL 3      &bt BT_SEL 4     xxx         xxx             xxx             xxx xxx xxx
   xxx &bt BT_CLR   xxx          &ext_power EP_ON &ext_power EP_OFF xxx              xxx         xxx             xxx             xxx xxx xxx
   xxx xxx          xxx          xxx              &reset            &bootloader      &reset      &bootloader     xxx             xxx xxx xxx
                                 xxx              xxx               xxx              xxx         xxx             xxx
                >;
            };
        };
};